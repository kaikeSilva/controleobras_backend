#######################################################################
# 1. BUILDER – Dependências PHP (Composer)
#######################################################################
FROM composer:2.7 AS composer-deps

WORKDIR /app
COPY composer.json composer.lock ./
RUN composer install --no-dev --prefer-dist --optimize-autoloader \
    --no-progress --no-scripts


#######################################################################
# 2. BUILDER – Front-end (Vite + npm)
#######################################################################
FROM node:22-alpine AS node-build

WORKDIR /front
COPY package*.json ./
RUN npm ci                              # instala dependências (inclui devDeps)

COPY resources/ resources/
COPY vite.config.js .
RUN npm run build                       # gera public/build + manifest
RUN rm -rf node_modules                 # mantêm a imagem final enxuta


#######################################################################
# 3. RUNTIME – PHP 8.4-FPM (Alpine) + Chromium + Puppeteer-core
#######################################################################
FROM php:8.4-fpm-alpine3.22 AS php
### 3.1 Bibliotecas e utilitários
RUN apk add --no-cache \
      icu-data icu-libs libzip libzip-dev zlib-dev \
      tzdata curl su-exec \
      chromium nss freetype harfbuzz ttf-freefont \
      mariadb-client \
      bash nodejs npm git make g++ pkgconfig autoconf \
 && npm install -g --unsafe-perm puppeteer@^22.0.0 \
 && ln -s /usr/bin/chromium-browser /usr/bin/google-chrome-stable \
 && npm cache clean --force

ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser \
    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1 \
    BROWSERSHOT_CHROME_PATH=/usr/bin/chromium-browser \
    NODE_PATH=/usr/local/lib/node_modules

### 3.2 Extensões PHP
RUN docker-php-ext-install \
        pdo pdo_mysql bcmath pcntl zip \
 && pecl install -o -f redis \
 && docker-php-ext-enable redis \
 && rm -rf /tmp/pear

### 3.3 Usuário não-root
ARG USER_ID=1000
ARG GROUP_ID=1000
RUN addgroup -g ${GROUP_ID} appgroup \
 && adduser  -D -u ${USER_ID} -G appgroup appuser \
 && mkdir -p /home/appuser/.cache/puppeteer /home/appuser/.config \
 && chown -R appuser:appgroup /home/appuser


#######################################################################
# 3.4 Aplicação Laravel
#######################################################################
WORKDIR /var/www                         

# ➊ Assets compilados do Vite
COPY --from=node-build    /front/public/build   ./public/build

# ➋ Binário do Composer (para dump-autoload em runtime, se necessário)
COPY --from=composer-deps /usr/bin/composer     /usr/local/bin/composer

# ➌ vendor/ já com dependências de produção
COPY --from=composer-deps /app/vendor           ./vendor

# ➍ Restante do código-fonte (routes, controllers, views, etc.)
COPY . .

# ➎ Otimiza autoloader
RUN composer dump-autoload --optimize --apcu


#######################################################################
# 3.5 Entrypoint & ajustes finais
#######################################################################
COPY docker/entrypoint.prod.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh \
 && chown -R appuser:appgroup /var/www

USER appuser
EXPOSE 9000
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
